{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "pip",
            "args": [
                "install",
                "-e",
                ".",
                "--upgrade"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Install Dev Dependencies",
            "type": "shell",
            "command": "pip",
            "args": [
                "install",
                "pytest",
                "pytest-asyncio",
                "pytest-cov",
                "black",
                "ruff",
                "mypy",
                "pre-commit"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Format Code (Black)",
            "type": "shell",
            "command": "black",
            "args": [
                "omega_phr/",
                "services/",
                "tests/"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Lint Code (Ruff)",
            "type": "shell",
            "command": "ruff",
            "args": [
                "check",
                "omega_phr/",
                "services/",
                "tests/",
                "--fix"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                {
                    "owner": "ruff",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}"
                    ],
                    "pattern": {
                        "regexp": "^(.+?):(\\d+):(\\d+):\\s+(\\w+)\\s+(.+)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                }
            ]
        },
        {
            "label": "Type Check (MyPy)",
            "type": "shell",
            "command": "mypy",
            "args": [
                "omega_phr/",
                "--ignore-missing-imports"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                {
                    "owner": "mypy",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}"
                    ],
                    "pattern": {
                        "regexp": "^(.+?):(\\d+):(\\d+):\\s+(error|warning|note):\\s+(.+)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                }
            ]
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "pytest",
            "args": [
                "tests/",
                "-v",
                "--tb=short",
                "--cov=omega_phr",
                "--cov-report=html",
                "--cov-report=term"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "PYTHONPATH": "${workspaceFolder}"
                }
            },
            "problemMatcher": [
                {
                    "owner": "pytest",
                    "fileLocation": [
                        "relative",
                        "${workspaceFolder}"
                    ],
                    "pattern": {
                        "regexp": "^(.+?):(\\d+):\\s+(.+)$",
                        "file": 1,
                        "line": 2,
                        "message": 3
                    }
                }
            ]
        },
        {
            "label": "Run Quick Tests",
            "type": "shell",
            "command": "pytest",
            "args": [
                "tests/",
                "-x",
                "--tb=short"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "PYTHONPATH": "${workspaceFolder}"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Generate Protobuf - Timeline",
            "type": "shell",
            "command": "python",
            "args": [
                "-m",
                "grpc_tools.protoc",
                "--proto_path=proto",
                "--python_out=.",
                "--grpc_python_out=.",
                "proto/timeline.proto"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}/services/timeline_lattice"
            },
            "problemMatcher": []
        },
        {
            "label": "Generate Protobuf - Hive",
            "type": "shell",
            "command": "python",
            "args": [
                "-m",
                "grpc_tools.protoc",
                "--proto_path=proto",
                "--python_out=.",
                "--grpc_python_out=.",
                "proto/hive.proto"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}/services/hive_orchestrator"
            },
            "problemMatcher": []
        },
        {
            "label": "Generate All Protobuf",
            "dependsOrder": "parallel",
            "dependsOn": [
                "Generate Protobuf - Timeline",
                "Generate Protobuf - Hive"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Start Timeline Service",
            "type": "shell",
            "command": "python",
            "args": [
                "main.py"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "options": {
                "cwd": "${workspaceFolder}/services/timeline_lattice",
                "env": {
                    "PYTHONPATH": "${workspaceFolder}",
                    "TIMELINE_HOST": "localhost",
                    "TIMELINE_PORT": "50051",
                    "TIMELINE_LOG_LEVEL": "DEBUG"
                }
            },
            "isBackground": true,
            "problemMatcher": {
                "owner": "timeline-service",
                "pattern": {
                    "regexp": "^(.*)$",
                    "file": 1
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^.*Starting.*Timeline.*service.*$",
                    "endsPattern": "^.*Timeline.*service.*started.*$"
                }
            }
        },
        {
            "label": "Start Hive Service",
            "type": "shell",
            "command": "python",
            "args": [
                "main.py"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "options": {
                "cwd": "${workspaceFolder}/services/hive_orchestrator",
                "env": {
                    "PYTHONPATH": "${workspaceFolder}",
                    "HIVE_HOST": "localhost",
                    "HIVE_PORT": "50052",
                    "HIVE_LOG_LEVEL": "DEBUG"
                }
            },
            "isBackground": true,
            "problemMatcher": {
                "owner": "hive-service",
                "pattern": {
                    "regexp": "^(.*)$",
                    "file": 1
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^.*Starting.*Hive.*service.*$",
                    "endsPattern": "^.*Hive.*service.*started.*$"
                }
            }
        },
        {
            "label": "Start All Services",
            "dependsOrder": "parallel",
            "dependsOn": [
                "Start Timeline Service",
                "Start Hive Service"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Docker Build",
            "type": "shell",
            "command": "docker",
            "args": [
                "build",
                "-t",
                "omega-phr:latest",
                "."
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Docker Compose Up",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "up",
                "-d"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Docker Compose Down",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "down"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Docker Compose Logs",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "logs",
                "-f"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "Setup Pre-commit",
            "type": "shell",
            "command": "pre-commit",
            "args": [
                "install"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Pre-commit",
            "type": "shell",
            "command": "pre-commit",
            "args": [
                "run",
                "--all-files"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Clean Build Artifacts",
            "type": "shell",
            "command": "find",
            "args": [
                ".",
                "-type",
                "f",
                "-name",
                "*.pyc",
                "-delete"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Full Development Setup",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Install Dependencies",
                "Install Dev Dependencies",
                "Generate All Protobuf",
                "Setup Pre-commit",
                "Run Tests"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        }
    ]
}
